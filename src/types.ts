import { DNSHost } from "./dnsHost.js";
import { VirtualServerHost } from "./virtualServerHost.js";

export interface HostConfig { // these must be given by the user
	virtualServer: VirtualServerHost;
	dns: DNSHost;
	bootDuration: number; // seconds to wait between sending start signals
	idleTime: number; // seconds before sending stop signal
}

export interface HostConfigObject {
	[key: string]: HostConfig;
}

export interface HostParams { // these are generated by the program
	lastBoot: number;
	lastOccupied: number;
}

export type Host = HostConfig & HostParams;

export interface HostObject {
	[key: string]: Host;
}

// ======================================================= //

const hostParamsDefaults: HostParams = {
	lastBoot: 0,
	lastOccupied: Date.now(),
};

export function hostConfigObjectToHostObject(hostObject: HostConfigObject): HostObject {
	let returnObj: HostObject = {};
	
	Object.keys(hostObject).forEach((key) => {
		returnObj[key] = {...hostParamsDefaults, ...hostObject[key]};
	});

	return returnObj;
}